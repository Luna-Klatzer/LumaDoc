{
  "info": {
    "version": "0.4.0-dev",
    "description": "The Solardoc Phoenix Rest API and SDS (Solardoc Socket)",
    "title": "@solardoc/phoenix",
    "contact": {
      "name": "Luna Klatzer, Emma Walchshofer & Lisa Pichler"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://github.com/SYP-AHIF-2023-24-25/SolarDoc/blob/main/LICENSE"
    }
  },
  "host": "localhost:4000",
  "definitions": {
    "Ping": {
      "description": "A simple ping response",
      "properties": {
        "date": {
          "description": "The current date in milliseconds",
          "example": 1710378432166,
          "type": "integer"
        },
        "greeting": {
          "description": "A friendly greeting",
          "example": "Hello from Solardoc Phoenix!",
          "type": "string"
        },
        "ip": {
          "description": "The IP address of the client",
          "example": "123.98.21.101",
          "type": "string"
        },
        "url": {
          "description": "The URL to ping",
          "example": "/v1/ping",
          "type": "string"
        }
      },
      "required": [
        "ip",
        "url",
        "date",
        "greeting"
      ],
      "title": "Ping",
      "type": "object"
    },
    "UserPublic": {
      "description": "A user of the application (public data)",
      "properties": {
        "id": {
          "description": "Unique identifier",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "UserPublic",
      "type": "object"
    },
    "UserPrivate": {
      "description": "A user of the application (full data)",
      "properties": {
        "confirmed_at": {
          "description": "Date of confirmation",
          "type": "string"
        },
        "email": {
          "description": "Users email",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier",
          "type": "string"
        },
        "intended_use": {
          "description": "Users intended use",
          "type": "integer"
        },
        "organisation": {
          "description": "Users organisation",
          "type": "string"
        },
        "role": {
          "description": "Users role",
          "type": "string"
        },
        "username": {
          "description": "Users username",
          "type": "string"
        }
      },
      "required": [
        "email",
        "id"
      ],
      "title": "UserPrivate",
      "type": "object"
    },
    "Error": {
      "description": "An error",
      "properties": {
        "detail": {
          "description": "Error message",
          "type": "string"
        }
      },
      "required": [
        "detail"
      ],
      "title": "Error",
      "type": "object"
    },
    "CreateUser": {
      "description": "A new user to be created",
      "properties": {
        "email": {
          "description": "Users email",
          "type": "string"
        },
        "intended_use": {
          "description": "Users intended use",
          "type": "integer"
        },
        "organisation": {
          "description": "Users organisation",
          "type": "string"
        },
        "password": {
          "description": "Users password",
          "type": "string"
        },
        "role": {
          "description": "Users role",
          "type": "string"
        },
        "username": {
          "description": "Users username",
          "type": "string"
        }
      },
      "required": [
        "password",
        "email"
      ],
      "title": "CreateUser",
      "type": "object"
    },
    "Errors": {
      "description": "A list of errors",
      "items": {
        "$ref": "#/definitions/Error"
      },
      "title": "Errors",
      "type": "array"
    },
    "UsersPrivate": {
      "description": "A collection of Users (full data)",
      "items": {
        "$ref": "#/definitions/UserPrivate"
      },
      "title": "UsersPrivate",
      "type": "array"
    },
    "UsersPublic": {
      "description": "A collection of Users (public data)",
      "items": {
        "$ref": "#/definitions/UserPublic"
      },
      "title": "UsersPublic",
      "type": "array"
    },
    "Message": {
      "description": "A message",
      "properties": {
        "message": {
          "description": "A message",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "title": "Message",
      "type": "object"
    },
    "UserLogin": {
      "description": "A user login",
      "properties": {
        "email": {
          "description": "Users email",
          "type": "string"
        },
        "password": {
          "description": "Users password",
          "type": "string"
        }
      },
      "required": [
        "password",
        "email"
      ],
      "title": "UserLogin",
      "type": "object"
    },
    "UserToken": {
      "description": "A user token",
      "properties": {
        "expires_at": {
          "description": "Token expiration date in milliseconds",
          "type": "integer"
        },
        "token": {
          "description": "Users token",
          "type": "string"
        }
      },
      "required": [
        "expires_at",
        "token"
      ],
      "title": "UserToken",
      "type": "object"
    },
    "UserTrusted": {
      "description": "A user which data can be accessed by trusted users i.e. an in between of public and private data",
      "properties": {
        "id": {
          "description": "User UUID",
          "type": "string"
        },
        "username": {
          "description": "User username",
          "type": "string"
        }
      },
      "required": [
        "username",
        "id"
      ],
      "title": "UserTrusted",
      "type": "object"
    },
    "EditorChannel": {
      "description": "An editor channel",
      "properties": {
        "active_since": {
          "description": "Editor channel active since in milliseconds",
          "type": "integer"
        },
        "creator": {
          "$ref": "#/definitions/UserTrusted",
          "description": "Editor channel creator"
        },
        "description": {
          "description": "Editor channel description",
          "type": "string"
        },
        "id": {
          "description": "Editor channel UUID",
          "type": "string"
        },
        "name": {
          "description": "Editor channel name",
          "type": "string"
        }
      },
      "required": [
        "active_since",
        "creator",
        "description",
        "name",
        "id"
      ],
      "title": "EditorChannel",
      "type": "object"
    },
    "EditorChannels": {
      "description": "A list of editor channels",
      "items": {
        "$ref": "#/definitions/EditorChannel"
      },
      "title": "EditorChannels",
      "type": "array"
    }
  },
  "schemes": [
    "http",
    "https",
    "ws",
    "wss"
  ],
  "paths": {
    "/v1/editor_channels": {
      "get": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.EditorChannelController.index",
        "parameters": [
          {
            "description": "Bearer",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EditorChannels"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "summary": "List all currently running editor channels",
        "tags": [
          "EditorChannel"
        ]
      }
    },
    "/v1/editor_channels/:id": {
      "get": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.EditorChannelController.show",
        "parameters": [
          {
            "description": "Bearer",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Editor channel ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EditorChannel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "summary": "Get a single editor channel",
        "tags": [
          "EditorChannel"
        ]
      }
    },
    "/v1/ping": {
      "get": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.PingController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ping"
            }
          }
        },
        "summary": "Ping the server",
        "tags": [
          "Ping"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.UserController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsersPublic"
            }
          }
        },
        "summary": "List all users",
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "",
        "operationId": "SolardocPhoenixWeb.UserController.create",
        "parameters": [
          {
            "description": "user attributes",
            "in": "body",
            "name": "user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/UserPrivate"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "summary": "Create a new user",
        "tags": [
          "User"
        ]
      }
    },
    "/v1/users/auth": {
      "delete": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.UserAuthController.delete",
        "parameters": [
          {
            "description": "Bearer",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Message"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "summary": "Log out a user",
        "tags": [
          "UserAuth"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.UserAuthController.create",
        "parameters": [
          {
            "description": "user login attributes",
            "in": "body",
            "name": "user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "summary": "Log in a user",
        "tags": [
          "UserAuth"
        ]
      }
    },
    "/v1/users/current": {
      "get": {
        "deprecated": false,
        "description": "",
        "operationId": "SolardocPhoenixWeb.UserController.current",
        "parameters": [
          {
            "description": "Bearer",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserPrivate"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        },
        "summary": "Get the current user",
        "tags": [
          "User"
        ]
      }
    }
  },
  "swagger": "2.0",
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "description": "API Token must be provided via `Authorization: Bearer ` header"
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User resources"
    },
    {
      "name": "UserAuth",
      "description": "User authentication resources"
    },
    {
      "name": "UserConfirmation",
      "description": "User confirmation resources"
    },
    {
      "name": "UserSettings",
      "description": "User settings resources"
    }
  ]
}
